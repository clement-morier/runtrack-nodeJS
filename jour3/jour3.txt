Job 02

show databases

----------------------------------------------------------------------------------------------

Job 03

mongo
use shop
db.product.insertOne({
    "name": "chaussure",
    "description": "une paire de chaussures",
    "price": 35,
    "quantity": 120
})

----------------------------------------------------------------------------------------------

Job 04

db.product.insertMany([
    {
        "name": "Pantalon noir",
        "description": "Un pantalon noir",
        "price": 14.99,
        "quantity": 12
    },
    {
        "name": "chaussettes",
        "description": "chaussettes cool !",
        "price": 6,
        "quantity": 6
    }
])

----------------------------------------------------------------------------------------------

Job 05

db.category.insertMany([
    { "name": "Vêtements" },
    { "name": "Chaussures" },
    { "name": "Accessoires" }
])

----------------------------------------------------------------------------------------------

Job 06

show collections

----------------------------------------------------------------------------------------------

Job 07

db.category.find()

----------------------------------------------------------------------------------------------

Job 08

db.category.find().limit(2)

----------------------------------------------------------------------------------------------

Job 09

db.product.find().sort({ "price": 1 })

----------------------------------------------------------------------------------------------

Job 10

db.product.find().sort({ "price": -1 })

----------------------------------------------------------------------------------------------

Job 11

db.product.find({
    "price": { $gt: 5 },
    "quantity": { $lt: 100 }
})

----------------------------------------------------------------------------------------------

Job 12

db.product.find({
    $or: [
        { "price": { $gt: 14.99 } },
        { "quantity": { $gt: 100 } }
    ]
})

----------------------------------------------------------------------------------------------

Job 13

db.product.find({}, { _id: 0 })

----------------------------------------------------------------------------------------------

Job 14

var categoryId = ObjectId("votre_id_de_categorie");
db.category.findOne({ "_id": categoryId })

----------------------------------------------------------------------------------------------

Job 15

db.category.updateOne(
    { "name": "bébé" },
    { $set: { "name": "Vêtements pour enfant" } }
)

----------------------------------------------------------------------------------------------

Job 16

db.product.updateMany({}, { $unset: { category_id: "" } })
db.product.find().forEach(function(product) {
    var category = db.category.findOne({ "name": product.category });
    db.product.updateOne({ "_id": product._id }, { $set: { "category_id": category._id } });
});

db.product.aggregate([
    {
        $lookup: {
            from: "category",
            localField: "category_id",
            foreignField: "_id",
            as: "category"
        }
    },
    {
        $unwind: "$category"
    },
    {
        $project: { "category_id": 0 }
    }
])

----------------------------------------------------------------------------------------------

Job 17

db.product.aggregate([
    {
        $group: {
            _id: "$category_id",
            totalProducts: { $sum: 1 }
        }
    },
    {
        $sort: { totalProducts: 1 }
    },
    {
        $limit: 1
    },
    {
        $lookup: {
            from: "category",
            localField: "_id",
            foreignField: "_id",
            as: "category"
        }
    },
    {
        $unwind: "$category"
    },
    {
        $project: { "totalProducts": 0 }
    }
])

----------------------------------------------------------------------------------------------